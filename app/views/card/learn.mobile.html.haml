= hidden_field_tag "start_time", 0
= hidden_field_tag "duration", 0
= hidden_field_tag "is_new", 0

=render :partial => '/header', :locals => {:title => t('deck.learn.title.old'), :subtitle => "#{t('text.cards-due-notice')}: ..."}
=render :partial => '/common/notice', :locals => {:id => 'new_card_notice', :keys => ['success', 'hidden'], :value => "#{'text.new-card-notice'}", :with_group => true}

%section{:class => ["panel"]}
  =render :partial => '/card/show', :locals => {:card => @card, :pronunciation_side => @deck.pronunciation_side, :supports_typed_answer => @deck.supports_written_answer}

- unless @card.nil?

  #reveal_button
    .panel
      .button{:class => "centre big_button"}
        = link_to t('actions.reveal'), '#', :class => 'positive', :id => "do_reveal"
      .pad_from_top

  #review_buttons{:class => "hidden"}
    .panel
      .button{:class => "centre large_button"}
        %ul
          .pad_from_top
          %li{:class => 'inline-block'}
            = link_to t('card.reveal.labels.didnt_know'), '#', :class => 'neutral large inline-block', :method => :post, :id => "do_dont_know", :style => 'width:14em;'
            :javascript
              $j('#do_dont_know').click(function(event) {
                var end = new Date();
                var start_time = document.getElementById("start_time") ;
                var duration = document.getElementById("duration") ;
                elapsed = end - start_time.value;


                var link = "#{review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'didnt_know', :review_start => @review_start.to_s)}";
                link = link + "&duration=" + duration.value + "&elapsed=" + elapsed ;

                $j('#do_dont_know').attr('href', link);
              });
          .pad_from_top
          %li{:class => 'inline-block'}
            = link_to t('card.reveal.labels.partial_answer'), '#', :class => 'neutral large inline-block', :method => :post, :id => "do_partial_answer", :style => 'width:14em;'
            :javascript
              $j('#do_partial_answer').click(function(event) {
                var end = new Date();
                var start_time = document.getElementById("start_time") ;
                var duration = document.getElementById("duration") ;
                elapsed = end - start_time.value;

                var link = "#{review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'partial_correct', :review_start => @review_start.to_s)}";
                link = link + "&duration=" + duration.value + "&elapsed=" + elapsed ;

                $j('#do_partial_answer').attr('href', link);
              });
          .pad_from_top
          %li{:class => 'inline-block'}
            = link_to t('card.reveal.labels.shaky_but_good'), '#', :class => 'neutral large inline-block', :method => :post, :id => "do_shaky_good", :style => 'width:14em;'
            :javascript
              $j('#do_shaky_good').click(function(event) {
                var end = new Date();
                var start_time = document.getElementById("start_time") ;
                var duration = document.getElementById("duration") ;
                elapsed = end - start_time.value;

                var link = "#{review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'shaky_good', :review_start => @review_start.to_s)}";
                link = link + "&duration=" + duration.value + "&elapsed=" + elapsed ;

                $j('#do_shaky_good').attr('href', link);
              });
          .pad_from_top
          %li{:class => 'inline-block'}
            = link_to t('card.reveal.labels.confident'), '#', :class => 'neutral large inline-block', :method => :post, :id => "do_good", :style => 'width:14em;'
            :javascript
              $j('#do_good').click(function(event) {
                var end = new Date();
                var start_time = document.getElementById("start_time") ;
                var duration = document.getElementById("duration") ;
                elapsed = end - start_time.value;

                var link = "#{review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'good', :review_start => @review_start.to_s)}";
                link = link + "&duration=" + duration.value + "&elapsed=" + elapsed ;

                $j('#do_good').attr('href', link);
              });
        .pad_from_top
        .pad

:javascript
  $j('html').keypress(function(event) {
    if (event.which == '32') 
    {
      //we are quoting the ruby variable resolution because the javascript test driver crashes doing it. wtf!
      if ($j('#do_reveal').is(":visible") && ("#{@deck.supports_written_answer}" == "false"))
      {
        $j('#do_reveal').click();
      }
      else
      {
        //click on button with highlight
        if ($j('#do_dont_know').attr('class') == 'positive')
        {
          $j('#do_dont_know').click();
        }
        else if ($j('#do_partial_answer').attr('class') == 'positive')
        {
          $j('#do_partial_answer').click();
        }
        else if ($j('#do_shaky_good').attr('class') == 'positive')
        {
          $j('#do_shaky_good').click();
        }
        else if ($j('#do_good').attr('class') == 'positive')
        {
          $j('#do_good').click();
        }
      }
    }
    if ($j('#do_reveal').is(":hidden"))
    {
      if (event.which == '49')
      {
        $j('#do_dont_know').click();
      }
      if (event.which == '50')
      {
        $j('#do_partial_answer').click();
      }
      if (event.which == '51')
      {
        $j('#do_shaky_good').click();
      }
      if (event.which == '52')
      {
        $j('#do_good').click();
      }
    }
  });

  //start timer when document is ready
  $j(document).ready(function() {
    $j("#card_front").focus();

    var start_time = document.getElementById("start_time") ;
    start_time.value = new Date ().getTime() ;

    $.ajax({
      url: "/deck/#{@deck.id}/card/#{@card.id}/is_new",
      success: function(data){
        //if we have a new card then we show the new card notice
        if (data == true)
        {
          $j("#new_card_notice").show();
        }
    
        var is_new = document.getElementById("is_new") ;
        is_new.value = data ;
      }
    });

    var is_new = document.getElementById("is_new") ;
    is_new.value = false ;


    $.ajax({
      url: "/deck/#{@deck.id}/due_count",
      success: function(data){
        $j("header p.subtitle").text("#{t('text.cards-due-notice')}: " + (data - 1));
      }
    });
  });

  //perform the reveal action
  $j('#do_reveal').click(function(event) {
    var end = new Date();
    var start_time = document.getElementById("start_time") ;
    var duration = document.getElementById("duration") ;
    var card_answer = document.getElementById("card_answer") ;
    var user_answer = document.getElementById("card_front") ;
    var is_new = document.getElementById("is_new") ;

    duration.value = end - start_time.value;

    var positive_style = 'positive large inline-block' ;

    //don't highlight buttons based on time if first button is positive (i.e. first reveal)
    if (is_new.value == "false")
    {
      //highlight buttons based on speed of answer
      if (duration.value <= 2000)
      {
        //highlight buttons based on typed answer
        if (user_answer)
        {
          if (card_answer.innerHTML == user_answer.value)
          {
            $j('#do_good').attr('class', positive_style)
            $j("#do_good").focus();
          }
          else
          {
            $j('#do_partial_answer').attr('class', positive_style)
            $j("#do_partial_answer").focus();

            //tell the user their answer didn't match
            $j("#answer_result").text("#{t('text.incorrect-answer')}");
          }

          $j("#answer_result").show();
        }
        else
        {
          $j('#do_good').attr('class', positive_style)
          $j("#do_good").focus();
        }
      }
      else
      {
        //highlight buttons based on typed answer
        if (user_answer)
        {
          if (card_answer.innerHTML == user_answer.value)
          {
            $j('#do_shaky_good').attr('class', positive_style)
            $j("#do_shaky_good").focus();
          }
          else
          {
            $j('#do_partial_answer').attr('class', positive_style)
            $j("#do_partial_answer").focus();

            //tell the user their answer didn't match
            $j("#answer_result").text("#{t('text.incorrect-answer')}");
          }

          $j("#answer_result").show();
        }
        else
        {
          $j('#do_shaky_good').attr('class', positive_style)
          $j("#do_shaky_good").focus();
        }
      }
    }
    else
    {
      $j('#do_dont_know').attr('class', positive_style)
      $j("#do_dont_know").focus();
    }



    $j("#back_of_card").show();
    $j("#reveal_button").hide();
    $j("#review_buttons").show();
  });