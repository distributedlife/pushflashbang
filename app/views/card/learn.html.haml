= hidden_field_tag "start_time", 0
= hidden_field_tag "duration", 0
= hidden_field_tag "is_new", 0

.container
  = page_header "#{deck_home_link(@card.deck_id)} #{t('titles.deck-learn.title-old')}".html_safe, "#{t('text.cards-due-notice')}: ..."

  = render :partial => '/common/notice', :locals => {:id => 'new_card_notice', :keys => ['success', 'hidden'], :value => "#{t('text.new-card-notice')}", :with_group => true}

  .content
    .well.centre
      =render :partial => '/card/show', :locals => {:card => @card, :pronunciation_side => @deck.pronunciation_side, :supports_typed_answer => @deck.supports_written_answer}

    .centre
      - unless @card.nil?
        #reveal_button
          = card_reveal_button

        #review_buttons.hidden.centre
          = card_review_didnt_know @card
          = card_review_shaky_good @card
          = card_review_partial_answer @card
          = card_review_confident @card
          
          
:javascript
  $j('html').keypress(function(event) {
    if (event.which == '32')
    {
      //we are quoting the ruby variable resolution because the javascript test driver crashes doing it. wtf!
      if ($j('#do_reveal').is(":visible"))
      {
        $j('#do_reveal').click();
      }
      else
      {
        var positive_style = 'positive large inline-block' ;

        //click on button with highlight
        if ($j('#do_dont_know').attr('class') == positive_style)
        {
          $j('#do_dont_know').click();
        }
        else if ($j('#do_partial_answer').attr('class') == positive_style)
        {
          $j('#do_partial_answer').click();
        }
        else if ($j('#do_shaky_good').attr('class') == positive_style)
        {
          $j('#do_shaky_good').click();
        }
        else if ($j('#do_good').attr('class') == positive_style)
        {
          $j('#do_good').click();
        }
      }

      event.preventDefault();
    }
    if ($j('#do_reveal').is(":hidden"))
    {
      if (event.which == '49')
      {
        $j('#do_dont_know').click();
      }
      if (event.which == '50')
      {
        $j('#do_partial_answer').click();
      }
      if (event.which == '51')
      {
        $j('#do_shaky_good').click();
      }
      if (event.which == '52')
      {
        $j('#do_good').click();
      }
    }
  });

  //start timer when document is ready
  $j(document).ready(function() {
    $j("#card_front").focus();

    var start_time = document.getElementById("start_time") ;
    start_time.value = new Date ().getTime() ;

    $j.ajax({
      url: "/deck/#{@deck.id}/card/#{@card.id}/is_new",
      success: function(data){
        //if we have a new card then we show the new card notice
        if (data == true)
        {
          $j("#new_card_notice").show();
        }

        var is_new = document.getElementById("is_new") ;
        is_new.value = data ;
      }
    });

    var is_new = document.getElementById("is_new") ;
    is_new.value = false ;


    $j.ajax({
      url: "/deck/#{@deck.id}/due_count",
      success: function(data){
        $j("header p.subtitle").text("#{t('text.cards-due-notice')}: " + (data - 1));
      }
    });
  });

  
  function make_primary_and_give_focus(id)
  {
    var positive_style = 'btn btn-large btn-success' ;

    $j(id).attr('class', positive_style)
    $j(id).focus();
  }

  function show_after_reveal()
  {
    $j("#back_of_card").removeClass("hidden");
    $j("#review_buttons").removeClass("hidden");
    $j("#reveal_button").hide();
  }


  function determine_button_to_highlight(quick_response)
  {
    return (quick_response ? "#do_good" : "#do_shaky_good")
  }

  //perform the reveal action
  $j('#do_reveal').click(function(event)
  {
    var end = new Date();
    var start_time = document.getElementById("start_time") ;
    var duration = document.getElementById("duration") ;
    var card_answer = document.getElementById("card_answer") ;
    var user_answer = document.getElementById("card_front") ;
    var is_new = document.getElementById("is_new") ;

    duration.value = end - start_time.value;
    var quick_response = duration.value <= 2000 ? true : false ;


    //don't highlight buttons based on time if first button is positive (i.e. first reveal)
    if (is_new.value != "false")
    {
      make_primary_and_give_focus("#do_dont_know");
      show_after_reveal();

      return;
    }


    make_primary_and_give_focus(determine_button_to_highlight(quick_response))
    show_after_reveal();
  });