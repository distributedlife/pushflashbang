=render :partial => '/header', :locals => {:title => t('titles.new-term-review.title'), :subtitle => "#{t('text.term-due-count')}: ..."}

#review_mode
  .panel
    #term{:id => "#{@term.id}"}
      =render :partial => '/terms/show', :locals => {:term => @term, :native => @native, :learned => @learned, :audio => @audio, :typed => @typed, :new => true}

#pronunciation_guidance
  .panel
    %p= t('text.pronunciation-guidance')
    - @idioms.each do |idiom|
      - Idiom::translations_in_idiom_and_language(idiom.id, @learned_language.id).each do |translation|
        - unless translation.pronunciation.nil?
          - words = {}
          - translation.pronunciation.split(' ').each do |word|
            .pronunciation{:style => "display: inline-block; padding: 0.6em; text-align: center;"}
              %p.pronunciation= word
              %p.pronunciation= (get_pronunciation_expansion word).html_safe

#review_buttons
  .panel
    .button{:class => "centre large_button"}
      %ul
        %li{:class => 'inline-block'}
          = link_to t('actions.ok'), '#', :class => 'positive large inline-block', :method => :post, :id => "do_results", :style => 'width:12em;'
          :javascript
            $j('#do_results').click(function(event) {
              var link = "#{record_first_review_language_set_term_path()}";
              link = link + "?review_mode=" + "#{params[:review_mode]}" ;
              link = link + "&listening=true";
              link = link + "&reading=true";
              link = link + "&speaking=true";
              link = link + "&writing=true";
              link = link + "&typing=true";
              link = link + "&translating=true";
              
              $j('#do_results').attr('href', link);
            });
      .pad

:javascript
  $j("#back_of_card").show();

  $j('html').keypress(function(event) {
    if (event.which == '32')
    {
      $j('#do_results').click();
    }
  });