= hidden_field_tag "start_time", 0
= hidden_field_tag "duration", 0
= hidden_field_tag "is_new", 0

.container
  = page_header t('titles.term-review.title'), "#{t('text.term-due-count')}: ..."

  = display_term_to_review @term, @native, @learned, @audio, @typed, @learned_translations_in_idiom, @native_translations, @idioms, @learned_language, @native_language
  = display_pronunciation_guidance @idioms, @learned_language, true
  = display_reveal_button
  = display_review_buttons params[:review_mode], @review_text
        
:javascript
  $j('html').keypress(function(event) 
  {
    if (event.which == '32')
    {
      //we are quoting the ruby variable resolution because the javascript test driver crashes doing it. wtf!
      if ($j('#do_reveal').is(":visible") && ("#{@typed}" == "false"))
      {
        $j('#do_reveal').click();
      }
      else
      {
        $j('#do_results').click();
      }

      event.preventDefault();
    }
  });

  //start timer when document is ready
  $j(document).ready(function()
  {
    $j("#card_front").focus();

    var start_time = document.getElementById("start_time") ;
    start_time.value = new Date ().getTime() ;

    var is_new = document.getElementById("is_new") ;
    is_new.value = false ;


    //get due count
    $j.ajax({
      url: "/languages/#{@learned_language.id}/sets/#{params[:set_id]}/due_count?review_mode=#{params[:review_mode]}",
      success: function(data){
        $j(".page-header h1 small").text("#{t('text.cards-due-notice')}: " + (data - 1));
      }
    });
  });
