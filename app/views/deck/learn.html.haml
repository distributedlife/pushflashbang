= hidden_field_tag "start_time", 0
= hidden_field_tag "duration", 0

-if @new_card
  =render :partial => '/header', :locals => {:title => t('deck.learn.title.new'), :subtitle => t('deck.learn.subtitle', :count => @due_count)}
-else
  =render :partial => '/header', :locals => {:title => t('deck.learn.title.old'), :subtitle => t('deck.learn.subtitle', :count => @due_count)}


- if @card.nil?
  //SHOW UPCOMING CARDS (pull into partial)
  %section{:class => ["panel"]}
    %p.centre There are no cards due and all cards in the deck are scheduled.
  //=render :partial => '/deck/upcoming_cards', :locals => {:upcoming_cards = @upcoming_cards}
  .cards
  - @upcoming_cards.each do |upcoming_card|
    .div{:class => "card_panel_full_page left centre"}
      %p#upcoming{:id => upcoming_card["id"]}= "#{upcoming_card["front"]}"
      - if @deck.pronunciation_side == "front" && !upcoming_card["pronunciation"].nil? && upcoming_card["pronunciation"] != ""
        %p{:class => "subtitle centre"}= "[#{upcoming_card["pronunciation"]}]"
      .pad_from_top
      .pad_from_top
      %p.subscript= "due in #{distance_of_time_in_words(Time.now, upcoming_card["due"], true)}"
  :javascript
    $("html").everyTime(30000, function(i) {
      location.reload();
    }, 0);
- else
  //SHOW current card (pull into partial)
  %section{:class => ["panel"]}
    %p{:class => "giant mandarin"}= @card.front
    - if @deck.pronunciation_side == "front" && !@card.pronunciation.nil? && @card.pronunciation != ""
      %p{:class => "subtitle centre"}= "[#{@card.pronunciation}]"
    - if @deck.supports_written_answer == true
      .pad_from_top
      .section_break
      .pad_from_top
      - answer = @card
      - answer.front = ""
      - semantic_form_for(answer, :url => '#', :method => :post) do |f|
        = f.input :front, :as => :string, :label => false, :hint => I18n.t('deck.learn.labels.answer'), :required => false, :wrapper_html => {:class => 'width80 centre mandarin'}
      %p{:class => "centre contrast hidden", :id => "answer_result"} is correct
      :javascript
        //override the enter button on the formsubmit
        $("#edit_card_#{answer.id}").submit(function(event) {
          event.preventDefault();


          //only support the enter button once
          if ($("#card_front").attr('disabled') == true)
          {
            return false ;
          }


          $('#do_reveal').click();

          $("#card_front").attr('disabled', true);
        });
    - unless @card.back == ""
      #back_of_card{:class => "hidden"}
        .section_break
        %p#card_answer{:class => "giant mandarin",}= @card.back
        - if @deck.pronunciation_side == "back" && !@card.pronunciation.nil? && @card.pronunciation != ""
          %p{:class => "subtitle centre"}= "[#{@card.pronunciation}]"

.pad
.pad_from_top

- unless @card.nil?

  #reveal_button
    .panel
      .button{:class => "centre big_button"}
        = link_to "Reveal", '#', :class => 'positive', :id => "do_reveal"
      .pad_from_top

  #review_buttons{:class => "hidden"}
    .panel
      .button{:class => "centre large_button"}
        %ul
          %li.inline
            - if @scheduled_card.interval == 0
              = link_to t('card.reveal.labels.didnt_know'), '#', :class => 'positive', :method => :post, :id => "do_dont_know"
            - else
              = link_to t('card.reveal.labels.didnt_know'), '#', :class => 'neutral', :method => :post, :id => "do_dont_know"
            :javascript
              $('#do_dont_know').click(function(event) {
                var duration = document.getElementById("duration") ;

                var link = "#{review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'didnt_know', :review_start => @review_start.to_s)}";
                link = link + "&duration=" + duration.value;

                $('#do_dont_know').attr('href', link);
              });
          %li.inline
            = link_to t('card.reveal.labels.partial_answer'), '#', :class => 'neutral', :method => :post, :id => "do_partial_answer"
            :javascript
              $('#do_partial_answer').click(function(event) {
                var duration = document.getElementById("duration") ;

                var link = "#{review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'partial_correct', :review_start => @review_start.to_s)}";
                link = link + "&duration=" + duration.value;

                $('#do_partial_answer').attr('href', link);
              });
          %li.inline
            = link_to t('card.reveal.labels.shaky_but_good'), review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'shaky_good', :review_start => @review_start.to_s, :reveal => @reveal), :class => 'neutral', :method => :post, :id => "do_shaky_good"
            :javascript
              $('#do_shaky_good').click(function(event) {
                var duration = document.getElementById("duration") ;

                var link = "#{review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'shaky_good', :review_start => @review_start.to_s)}";
                link = link + "&duration=" + duration.value;

                $('#do_shaky_good').attr('href', link);
              });
          %li.inline
            = link_to t('card.reveal.labels.confident'), review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'good', :review_start => @review_start.to_s, :reveal => @reveal), :class => 'neutral', :method => :post, :id => "do_good"
            :javascript
              $('#do_good').click(function(event) {
                var duration = document.getElementById("duration") ;

                var link = "#{review_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :answer => 'good', :review_start => @review_start.to_s)}";
                link = link + "&duration=" + duration.value;

                $('#do_good').attr('href', link);
              });
    .pad

:javascript
  $('html').keypress(function(event) {
    if (event.which == '32') 
    {
      if ($('#do_reveal').is(":visible") && (#{@deck.supports_written_answer} == false))
      {
        $('#do_reveal').click();
      }
      else
      {
        //click on button with highlight
        if ($('#do_dont_know').attr('class') == 'positive')
        {
          $('#do_dont_know').click();
        }
        else if ($('#do_partial_answer').attr('class') == 'positive')
        {
          $('#do_partial_answer').click();
        }
        else if ($('#do_shaky_good').attr('class') == 'positive')
        {
          $('#do_shaky_good').click();
        }
        else if ($('#do_good').attr('class') == 'positive')
        {
          $('#do_good').click();
        }
      }
    }
    if ($('#do_reveal').is(":hidden"))
    {
      if (event.which == '49')
      {
        $('#do_dont_know').click();
      }
      if (event.which == '50')
      {
        $('#do_partial_answer').click();
      }
      if (event.which == '51')
      {
        $('#do_shaky_good').click();
      }
      if (event.which == '52')
      {
        $('#do_good').click();
      }
    }
  });

  //start timer when document is ready
  $(document).ready(function() {
    $("#card_front").focus();

    var start_time = document.getElementById("start_time") ;
    start_time.value = new Date ().getTime() ;
  });

  //perform the reveal action
  $('#do_reveal').click(function(event) {
    var end = new Date();
    var start_time = document.getElementById("start_time") ;
    var duration = document.getElementById("duration") ;
    var card_answer = document.getElementById("card_answer") ;
    var user_answer = document.getElementById("card_front") ;

    duration.value = end - start_time.value;


    //don't highlight buttons based on time if first button is positive (i.e. first reveal)
    if ($('#do_dont_know').attr('class') != 'positive')
    {
      //highlight buttons based on speed of answer
      if (duration.value <= 2000)
      {
        //highlight buttons based on typed answer
        if (user_answer)
        {
          if (card_answer.innerHTML == user_answer.value)
          {
            $('#do_good').attr('class', 'positive')
            $("#do_good").focus();
          }
          else
          {
            $('#do_partial_answer').attr('class', 'positive')
            $("#do_partial_answer").focus();

            //tell the user their answer didn't match
            $("#answer_result").text("is not correct");
          }

          $("#answer_result").show();
        }
        else
        {
          $('#do_good').attr('class', 'positive')
          $("#do_good").focus();
        }
      }
      else
      {
        //highlight buttons based on typed answer
        if (user_answer)
        {
          if (card_answer.innerHTML == user_answer.value)
          {
            $('#do_shaky_good').attr('class', 'positive')
            $("#do_shaky_good").focus();
          }
          else
          {
            $('#do_partial_answer').attr('class', 'positive')
            $("#do_partial_answer").focus();

            //tell the user their answer didn't match
            $("#answer_result").text("is not correct");
          }

          $("#answer_result").show();
        }
        else
        {
          $('#do_shaky_good').attr('class', 'positive')
          $("#do_shaky_good").focus();
        }
      }
    }
    else
    {
      $("#do_dont_know").focus();
    }



    $("#back_of_card").show();
    $("#reveal_button").hide();
    $("#review_buttons").show();
  });