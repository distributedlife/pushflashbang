-if @new_card
  =render :partial => '/header', :locals => {:title => t('deck.learn.title.new'), :subtitle => t('deck.learn.subtitle', :count => @due_count)}
-else
  =render :partial => '/header', :locals => {:title => t('deck.learn.title.old'), :subtitle => t('deck.learn.subtitle', :count => @due_count)}
- if @card.nil?
  %section{:class => ["panel"]}
    %p.centre There are no cards due and all cards in the deck are scheduled.

- if @card.nil?
  .cards
  - @upcoming_cards.each do |upcoming_card|
    .div{:class => "card_panel_full_page left centre"}
      %p#upcoming{:id => upcoming_card["id"]}= "#{upcoming_card["front"]}"
      .pad_from_top
      .pad_from_top
      %p.subscript= "due in #{distance_of_time_in_words(Time.now, upcoming_card["due"], true)}"
  :javascript
    $("html").everyTime(30000, function(i) {
      location.reload();
    }, 0);
- else
  %section{:class => ["panel"]}
    %p.giant= @card.front
.pad
.pad_from_top
- unless @card.nil?
  %section{:class=> "panel"}
    .button{:class => "centre big_button"}
      = link_to "Reveal", reveal_deck_card_path(:deck_id => @card.deck_id, :id => @card.id, :review_start => @review_start), :class => 'positive'
    .pad_from_top
:javascript
  $('html').keypress(function(event) {
    if (event.which == '32') 
    {
        document.location = $(".big_button a").attr('href');
    }
  });