=render :partial => '/header', :locals => {:title => @deck.name, :subtitle => deck_subtitle(@deck)}
%nav{:class => ["right"], :style => "width: 25%"}
  - unless @deck.description.nil? || @deck.description == ""
    .panel
      %p.description= @deck.description
  .panel
    %p.description= link_to "Review", learn_deck_path(@deck.id), :class => "focus"
    .pad_from_top
    - if @deck.user_id == current_user.id
      %p.description= link_to "Add Card", new_deck_card_path(@deck.id)
      .pad
      %p.description= link_to "Edit Deck", edit_deck_path(@deck.id)
      .pad
      - if @deck.shared
        %p.description= link_to "Stop Sharing Deck", toggle_share_deck_path(@deck.id)
      - else
        %p.description= link_to "Share Deck", toggle_share_deck_path(@deck.id)
      .pad

%section{:class => ["left"], :style => "width: 75%; height: 80%"}
  - if @cards.empty?
    .div{:class => "panel left", :style => ""}
      %p This deck has no cards; 
  - else
    - current_chapter = 0
    - @cards.each do |card|
      - if current_chapter < card.chapter
        - current_chapter = card.chapter
        %p.minor_title= "Chapter #{current_chapter}"

      .div{:class => "card_panel left", :style => ""}
        %p{:class => "tiny_option text_right"}
          = link_to "edit", edit_deck_card_path(card.deck_id, card.id)
        %p{:class => "centre mandarin"}= link_to card.front, "#?w=750&h=600", :rel => "popup_name_#{card.id}", :class => "poplight"
        - if is_pronunciation_on_front? @deck.pronunciation_side
          .pad_from_top
          %p{:class => "minor_title centre"}= "[#{card.pronunciation}]"
      #popup_name{:id => "#{card.id}", :class => "popup_block"}
        %p{:class => "giant mandarin"}= card.front
        - if is_pronunciation_on_front? @deck.pronunciation_side
          .pad_from_top
          %p{:class => "minor_title centre"}= "[#{card.pronunciation}]"
        .section_break
        .pad_from_top
        %p{:class => "giant mandarin"}= card.back
        - if is_pronunciation_on_back? @deck.pronunciation_side
          .pad_from_top
          - words = {}
          %div{:class => "centre inline-block"}
            - card.pronunciation.split(' ').each do |word|
              %div{:class => "left", :style => "padding: 0.6em;"}
                %p{:class => "minor_title"}= word
                %p= (get_pronunciation_expansion word).html_safe
            .pad
  .pad


:javascript
  http://www.sohtanaka.com/web-design/inline-modal-window-w-css-and-jquery
  $(document).ready(function() {
    $('a.poplight[href^=#]').click(function() {
      var popID = $(this).attr('rel'); //Get Popup Name
      var popURL = $(this).attr('href'); //Get Popup href to define size

      //Pull Query & Variables from href URL
      var query= popURL.split('?');
      var dim= query[1].split('&');
      var popWidth = dim[0].split('=')[1]; //Gets the first query string value
      var popHeight = dim[1].split('=')[1]; //Gets the second query string value

      //Fade in the Popup and add close button
      //$('#' + popID).fadeIn().css({ 'width': Number( popWidth ) });
      $('#' + popID).fadeIn().css({ 'width': Number( popWidth ), 'height' : Number (popHeight) }).prepend('<a href="#" class="close right"><p class="btn_close">close</p></a>');
      //.prepend('<a href="#" class="close"><img src="close_pop.png" class="btn_close" title="Close Window" alt="Close" /></a>');

      //Define margin for center alignment (vertical   horizontal) - we add 80px to the height/width to accomodate for the padding  and border width defined in the css
      var popMargTop = ($('#' + popID).height() + 80) / 2;
      var popMargLeft = ($('#' + popID).width() + 80) / 2;

      //Apply Margin to Popup
      $('#' + popID).css({
          'margin-top' : -popMargTop,
          'margin-left' : -popMargLeft
      });

      //Fade in Background
      $('body').append('<div id="fade"></div>'); //Add the fade layer to bottom of the body tag.
      $('#fade').css({'filter' : 'alpha(opacity=80)'}).fadeIn(); //Fade in the fade layer - .css({'filter' : 'alpha(opacity=80)'}) is used to fix the IE Bug on fading transparencies


      $('.mandarin').textfill({ maxFontPixels: 36 });

      return false;
    });
  });

  //Close Popups and Fade Layer
  $('.popup_block, a.close, #fade').live('click', function() {
      $('#fade, a.close, .popup_block').fadeOut(function() {
          $('#fade').remove();  
      });
      return false;
  });